import 'package:flutter/material.dart';

void main() {
  runApp(MyApp());
}

// Common Code for the Base Application
class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Flutter Examination',
      initialRoute: '/',
      routes: {
        '/': (context) => HomeScreen(),
        '/screen1': (context) => Screen1(), // Navigation Example
      },
      debugShowCheckedModeBanner: false,
    );
  }
}

// Home Screen for Demonstrating Common Features
class HomeScreen extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: Text('Flutter Examination')),
      body: SingleChildScrollView(
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            // 1(a) Navigation using Navigator
            ElevatedButton(
              onPressed: () {
                Navigator.push(
                  context,
                  MaterialPageRoute(builder: (context) => Screen1()),
                );
              },
              child: Text("Navigate to Screen 1"),
            ),
            // 1(b) Navigation using Named Routes
            ElevatedButton(
              onPressed: () {
                Navigator.pushNamed(context, '/screen1');
              },
              child: Text("Navigate to Screen 1 (Named Route)"),
            ),
            Divider(),
            // 2(a) Slider Widget
            SliderExample(),
            Divider(),
            // 3) Form Validation
            FormExample(),
            Divider(),
            // 4) Stateful Widget
            CounterWidget(),
            Divider(),
            // 5) Stateless Widget
            StatelessExample(text: "Hello from Stateless Widget"),
            Divider(),
            // 6) TabBar
            TabBarExample(),
            Divider(),
            // 7) Flutter Switch
            SwitchExample(),
            Divider(),
            // 8) Animations
            AnimationExample(),
            Divider(),
            // 9) ListView
            ListViewExample(),
            Divider(),
            // 10) GridView
            GridViewExample(),
            Divider(),
            // 11) Image Upload
            Image.network(
              'https://via.placeholder.com/150', // Placeholder Image
              height: 150,
              width: 150,
            ),
          ],
        ),
      ),
    );
  }
}

// 1(a) and 1(b): Example Screens for Navigation
class Screen1 extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: Text("Screen 1")),
      body: Center(
        child: Text("Welcome to Screen 1"),
      ),
    );
  }
}

// 2(a): Slider Widget Example
class SliderExample extends StatefulWidget {
  @override
  _SliderExampleState createState() => _SliderExampleState();
}

class _SliderExampleState extends State<SliderExample> {
  double _sliderValue = 10;
  @override
  Widget build(BuildContext context) {
    return Column(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        Text("Slider Value: $_sliderValue"),
        Slider(
          value: _sliderValue,
          min: 0,
          max: 100,
          onChanged: (value) {
            setState(() {
              _sliderValue = value;
            });
          },
        ),
      ],
    );
  }
}

// 3: Form Validation Example
class FormExample extends StatefulWidget {
  @override
  _FormExampleState createState() => _FormExampleState();
}

class _FormExampleState extends State<FormExample> {
  final _formKey = GlobalKey<FormState>();
  String _text = '';
  @override
  Widget build(BuildContext context) {
    return Form(
      key: _formKey,
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          TextFormField(
            decoration: InputDecoration(labelText: 'Enter text'),
            validator: (value) {
              if (value == null || value.isEmpty) {
                return 'Please enter some text';
              }
              return null;
            },
            onSaved: (value) {
              _text = value!;
            },
          ),
          ElevatedButton(
            onPressed: () {
              if (_formKey.currentState!.validate()) {
                _formKey.currentState!.save();
                ScaffoldMessenger.of(context).showSnackBar(
                  SnackBar(content: Text('Text Saved: $_text')),
                );
              }
            },
            child: Text('Submit'),
          ),
        ],
      ),
    );
  }
}

// 4: Stateful Widget Example
class CounterWidget extends StatefulWidget {
  @override
  _CounterWidgetState createState() => _CounterWidgetState();
}

class _CounterWidgetState extends State<CounterWidget> {
  int _count = 0;
  @override
  Widget build(BuildContext context) {
    return Column(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        Text("Counter: $_count"),
        ElevatedButton(
          onPressed: () {
            setState(() {
              _count++;
            });
          },
          child: Text("Increment"),
        ),
      ],
    );
  }
}

// 5: Stateless Widget Example
class StatelessExample extends StatelessWidget {
  final String text;
  StatelessExample({required this.text});
  @override
  Widget build(BuildContext context) {
    return Text(text);
  }
}

// 6: TabBar Example
class TabBarExample extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return DefaultTabController(
      length: 2,
      child: Column(
        children: [
          TabBar(
            tabs: [
              Tab(icon: Icon(Icons.directions_car)),
              Tab(icon: Icon(Icons.directions_bike)),
            ],
          ),
          SizedBox(
            height: 100,
            child: TabBarView(
              children: [
                Center(child: Text("Car Tab")),
                Center(child: Text("Bike Tab")),
              ],
            ),
          ),
        ],
      ),
    );
  }
}

// 7: Switch Widget Example
class SwitchExample extends StatefulWidget {
  @override
  _SwitchExampleState createState() => _SwitchExampleState();
}

class _SwitchExampleState extends State<SwitchExample> {
  bool _isSwitched = false;
  @override
  Widget build(BuildContext context) {
    return SwitchListTile(
      title: Text("Enable Feature"),
      value: _isSwitched,
      onChanged: (value) {
        setState(() {
          _isSwitched = value;
        });
      },
    );
  }
}

// 8: Animation Example
class AnimationExample extends StatefulWidget {
  @override
  _AnimationExampleState createState() => _AnimationExampleState();
}

class _AnimationExampleState extends State<AnimationExample>
    with SingleTickerProviderStateMixin {
  late AnimationController _controller;
  late Animation<double> _fadeAnimation;

  @override
  void initState() {
    super.initState();
    _controller =
        AnimationController(duration: Duration(seconds: 2), vsync: this);
    _fadeAnimation = Tween<double>(begin: 0, end: 1).animate(_controller);
    _controller.forward();
  }

  @override
  Widget build(BuildContext context) {
    return FadeTransition(
      opacity: _fadeAnimation,
      child: Text("Fade Animation Example"),
    );
  }
}

// 9: ListView Example
class ListViewExample extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return SizedBox(
      height: 100,
      child: ListView(
        children: [
          Text("Item 1"),
          Text("Item 2"),
          Text("Item 3"),
        ],
      ),
    );
  }
}

// 10: GridView Example
class GridViewExample extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return SizedBox(
      height: 150,
      child: GridView.count(
        crossAxisCount: 2,
        children: List.generate(4, (index) => Text("Grid Item $index")),
      ),
    );
  }
}
